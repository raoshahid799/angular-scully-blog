{"version":3,"sources":["./src/app/blog-list/blog-list.component.ts","./src/app/blog-list/blog-list.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ScullyRoute, ScullyRoutesService } from '@scullyio/ng-lib';\nimport { Observable } from 'rxjs';\nimport {map}from 'rxjs/operators'\n@Component({\n  selector: 'app-blog-list',\n  templateUrl: './blog-list.component.html',\n  styleUrls: ['./blog-list.component.scss']\n})\nexport class BlogListComponent implements OnInit {\n\n  public posts:Observable<ScullyRoute[]>;\n  constructor(private scully:ScullyRoutesService) { }\n\n  ngOnInit(): void {\n    this.posts=this.scully.available$.pipe((map(routeList=>{\n        return routeList.filter((route:ScullyRoute)=>{\n            return route.route.startsWith(`/blog/`);\n        })\n    })));\n  }\n\n}\n","\n<ul>\n  <li class=\"card mt-2 p-2 bg-primary\" style=\"list-style: none;\" *ngFor=\"let post of posts |async\">\n\n    <a [routerLink]=\"post.route\">\n      <h1 class=\"text-white\">\n        {{post.title}}\n\n      </h1>\n       <p class=\"text-white\">{{post.description}}</p>\n    </a>\n\n  </li>\n</ul>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'scully-blog';\n}\n","<header>\n\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-primary\">\n    <div class=\"container-fluid\">\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <a class=\"navbar-brand text-white\" href=\"#\">Scully Blog</a>\n    <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\n      <ul class=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link active text-white\" aria-current=\"page\" href=\"/\">Home</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link text-white\" href=\"/\">Blog</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link text-white \" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">About me</a>\n        </li>\n      </ul>\n\n    </div>\n  </div>\n</nav>\n</header>\n\n<main>\n\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-12\" style=\"max-width: 720px;\">\n\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n\n</main>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ScullyLibModule } from '@scullyio/ng-lib';\nimport { BlogListComponent } from './blog-list/blog-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BlogListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ScullyLibModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { BlogListComponent } from './blog-list/blog-list.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {path:'',component:BlogListComponent},\n  { path: 'blog', loadChildren: () => import('./blog/blog.module').then(m => m.BlogModule) }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}